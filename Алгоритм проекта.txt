 Процесс создание самолета, рейса, а также вылета и посадки самолёта:
!!1)Диспетчер регистрирует самолет заполняя всеми данными но не добавляет его в базу данных!!!
!!2)Диспетчер отправляет самолет главному инженеру на технический осмотр
!!3)Главный инженер отдает обычному инженеру приказ чтобы инженер проверил самолет
!!4)Инженер проверит самолет и вернет Главному инженеру отчёт о самолете
!!5)если в отчёте будет написано что самолет исправен то все норм! (отчёт инжнера зависит от столбца в базе данных "is_broken"
!!								  и если is_broken = true то отчёт тоже будет true)
!!Если в отчёте будет написано что самолет неисправен (is_broken = false) то Главный инженер выдаст приказ инженеру, который проверял этот самолет починить его
!!Инженер починет самолет (изменит флажок самолета на true) и снова вернет отчёт о самолете Главному инженеру но в этот раз отчёт будет true
!!6)Главный инженер после того как проверил отчёт отправит Диспетчеру сам самолет и говорит ему что он исправен
!!7)Диспетчер отправит Главному диспетчеру самолёт
!!8)Главный диспетчер должен потвердить регистрацию самолета (диспетчер будет регистрировать самолет как сущность
							    но не сможет добавить в базу данных, чтобы добавить в базу данных
							    Главный диспетчер получит самолёт от Диспетчера, скорее всего провалидирует
							    И после этого добавит в базу данных)
!!9)Теперь Диспетчер может создать новый рейс и привязать самолёт который они создали
!!10)Диспечтер передает новый рейс Главному Диспетчеру
!!11)Главный диспетчер опять проверяет рейс (опять наверное какая та валидация) и потверждает создание нового рейса (регистрируя его в базе данных)
                                                                             (Самолет хоть и был в базе данных не был привязан к рейсу, а наши
                                                                             пользователи могут работать только с рейсом, именно из-за этого
                                                                               создание самолёта мало что даст, а его рейс уже даст точку доступа
                                                                               для ползователей)
!!12)После того как Главный диспетчер добавил самолёт и рейс в базу, Пользователи смогут зарегестрироваться на рейс этого самолёта
!!13)Когда места на рейсе закончатся (List<Users> Список_Пользователей_В_Самолёте == count_place) Диспетчер инициирует отправку рейса и передаст Главному инженеру
!!14)Главный инженер назначает Инженера для заправки самолета
!!15)Инженер заправит самолёт и отправит ответ Главному инженеру
!!16)Главный инженер передаст ответ Диспетчеру
!!17)Диспетчер должен сообщить Пилота, Главного стюарда и всех Стюардов
!!18)Диспетчер отправляет рейс на подтверждение Главному диспетчеру
!!19)Главный диспетчер потверждает отправку рейса (здесь скорее всего должна быть опять какая та валидация
				       Мне кажется что здесь Главный диспетчер выглдяит как какой-то
				       Адаптер между диспетчером и Пилотом)
!!20)Главный диспетчер перадаст свой ответ Пилоту
!!21)Пилот начинает рейс и самолёт вылетел (он меняет флажок "is_flight" на true тем самым говоря что самолёт вылетел)
!!22)Самолёт летит
!!23)Пилот передает запрос о посадке самолёта ДРУГОМУ Диспетчеру из ДРУГОГО Аэропорта
!!24)Диспетчер принимает рейс и передает летящий рейс Главному диспетчеру
!!25)Главный диспетчер потверждает слова Диспетчера и дает разрешение на посадку рейса
!!26)Пилот садится (он меняет флажок "is_flight" на false тем самым говоря что самолёт посадили)
27)После этого груз самолёта резко освобождается и все пользователи могут оставить отзыв о рейсе
!!28)И непонятным магическим образом самолёт и весь экипаж с рейсом вернется к своему Аэрпорту


Распределение ролей:
Администратор системы - один на всю систему (возможно будет один Администратор на один Аэрпорт, ведь каждый кастомный properties файл представляет один Аэрпорт)
Управляющий Аэрпортом - один Управляющий на один аэрпорт
Главный диспетчер - один Главный диспетчер на один аэрпорт
Главный инженер - один Главный инженер на один аэрпорт
Диспетчер - Несколько Диспечтеров на один аэрпорт
Инженер - Несколько Инженеров на один аэрпорт
Пилот - Один пилот на один самолёт в Аэрпорту
Главынй стюард - один Главный стюард на один самолёт в Аэрпорту
Стюард - 3-4 максимум 5 стюардов на один самолёт в Аэрпорту
Клиент - Неограниченное множество


!!Алгоритм пользователей:
!!1)Пользователь регистрируется на нашем сайте в контроллере "noAuth", но это пользователь не имеет строку в базе данных
!!2)После этого пользователь аутенфицируется на нашем сайте
!!3)По default роль пользователя будет "КЛИЕНТ"
!!4)Администартор системы или Управляющий аэрпортом сможет изменить нам роль
!!5)Но Управляющий аэрпортом сможет добавить нового пользователя и сразу дать ему нужную роль, но может с спокойно вас удалить из базы данных (уволить)
!!(Я хотел сделать реализацию где Клиент может отправить заявку на повышение Управляющему или Администратору, но не знаю пока нужно ли это и хочу я этого)

Действие Администратора системы:
!!Просмотр и редактирование системных настроек проекта.
!!Просмотр и редактирование ролей пользователей.
Просмотр статистики работы системы и сбор метрик.
!!(в случае если он будет на один Аэрпорт то он сможет просматрировать и редактировать только пользователей из своего Аэрпорта а также свой properties файл

!!Действе Управляющего Аэрпортом:
!!Просмотр всех доступных данных в системе.
!!Добавление, изменение и увольнение работника.
Формирование отчетов.

Алгоритм созадние отчётов для Администратора системы:
1)Управляющий аэрпортом может в своей точке доступа создать отчёт о работе Аэрпорта
2)После того как он создал отчёт, он скорее всего сохранится в базе данных в таблице отчётов
3)Эту таблицу сможет смотреть Администратор системы

Действе Главного диспетчера:
!!Просмотр доступных рейсов.
!!Подтверждение нового рейса.
!!Просмотр всех зарегистрированных самолетов.
!!Подтверждение регистрации нового самолета.
!!Подтверждение отправки рейса.
!!Подтверждение принятия рейса.

Действие Диспетчера:
!!Просмотр доступных рейсов.
!!Создание нового рейса.
!!Просмотр всех зарегистрированных самолетов.
!!Регистрация нового самолета.
!!Отправка рейса.
!!Принятие рейса.

(Взаимодейсвие Диспетчеров и Главного дсипетчера напомнела мне на один паттерн Singleton, где мы даем один экземпляр и с этим экземпляром работают все)

Дейсвтие Главного инженера:
!!Просмотр доступных самолетов.
!!Просмотр истории технического осмотра самолета.
!!Подтверждение исправности самолета.
!!Назначение ремонта самолета.
!!Назначение заправки самолета.
!!Назначение техничесокого осмотра.
!!Подтверждение технического осмотра самолета.

Действие Инженера:
!!Просмотр доступных самолетов.
!!Просмотр самолетов, отправленных на ремонт.
!!Просмотр новых самолетов.
!!Составление технического осмотра самолета.
!!Заправка самолета.

!!(Здесь все очень похоже на механику с Диспетчероми но в другом порядке,  все Диспетчеры работают создавая самолеты и рейсы но всен потвердждает Главный диспетчер)
!!(Но здесь Главнй инжнер всеми командует, а Инжнеры все делают )

Действие Пилота:
!!Просмотр графика рейсов.
!!Просмотр отзывов клиентов по рейсу.
!!Начало полета.
!!Подтверждение готовности к рейсу.
!!Отправка запроса на посадку самолета.

Действе Главного стюарда:
!!Подтверждение готовности клиентов к рейсу.
!!Назначение проведения инструктажа.
!!Назначение раздачи еды.
!!Подтверждение готовности к рейсу.

Действие Стюарда:
!!Проверка клиента на готовность к рейсу.
!!Проведение инструктажа.
!!Раздача еды.
!!Подтверждение готовности к рейсу.

Алгоритм Стюардов:
!!1)Гланвый стюард, Стюарды и Пилот потверждают готовность к рейсу
!!2)Стюарды могут проверить клиентов на готовность к рейсу
!!3)После проверки стюарды отдают все данные Главному Стюарду
!!4)Главный Стюард  потверждает готовность клиентов к рейсу
!!5)После того как самолет взлетел Гланвый стюард может назначить инструктаж
!!6)Все стюарды мгновенно начнут инструктаж
!!7)Когда они закончат инструктаж то все отдадут Главному стюарду
!!8)Главный стюард закончит метод
!!9)Главвый стюард может назначить раздау еды
!!10)Все стюарды мгновенно начнут раздачу еды
!!11)Когда они закончат раздачу еды то все отдадут Главному стюарду
!!12)Главный стюард закончит метод


Дейсвтие Клиентов:
!!Просмотр своих прошлых рейсов.
!!Просмотр доступных рейсов.
!!Просмотр рейса на каоторый ты сейчас отправишься
!!Регистрация на рейс.
!!Отмена регистрации на рейс.


Объяснение функций Пилота:
Пилот может смотреть график рейса (когда начнется рейс (вы думали что рейс сразу отправится после того как заполнился?) сколько будут лететь и все!)
Пилот также может смотреть отзывы Клиентов (После того как рейс закончился клиент может оставить отзыв о данном рейсе)




Обновление:
добавление самолета у пиолат и стюарда






